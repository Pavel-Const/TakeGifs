{"version":3,"sources":["button/Button.module.css","imageItem/ImageItem.module.css","imageGropup/ImageGroup.module.css","Form/Form.module.css","input/Input.Module.css","MainBoard/MainBoard.module.css","button/Button.js","input/Input.js","Form/Form.js","imageItem/ImageItem.js","imageGropup/ImageGroup.js","MainBoard/MainBoard.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Button","props","cls","classes","type","onClick","className","join","disabled","children","Input","ref","reference","onChange","placeholder","isFormValid","errorMessageTeg","state","data","errorMessageData","httpError","errorMessageHttp","Form","input","value","clickImage","inputValueClick","inputRef","console","log","submitHandler","event","preventDefault","onChangeHandler","target","setState","validateControl","trim","test","String","clickLoad","setTimeout","loadImages","clickClear","clearBoard","this","onSubmit","loading","group","groupImages","Component","ImageItem","src","map","index","classe","ImageTwo","renderImg","ImageGroup","teg","item","ImageGrid","url","MainBoard","images","imagesGroup","onClickImage","response","arrayUrl","tegs","split","timer","setInterval","a","axios","get","image_url","clearInterval","e","push","undefined","groupImage","result","reduce","r","Object","create","renderImages","ImageList","img","keys","urls","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.16845c9b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__1srBm\",\"load\":\"Button_load__1ETCv\",\"clear\":\"Button_clear__2gwHV\",\"group\":\"Button_group__2jd9t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageItem\":\"ImageItem_ImageItem__pqOZl\",\"ImageTwo\":\"ImageItem_ImageTwo__1Uek9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGroup\":\"ImageGroup_ImageGroup__GZCDg\",\"ImageGrid\":\"ImageGroup_ImageGrid__3y5cv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Form\":\"Form_Form__3dSal\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"_1UgJTzFt3gBwtPaVQAUiBS\",\"invalid\":\"_3TtkaCf3L8tTsQ_UsXGAM1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainBoard\":\"MainBoard_MainBoard__x9mPd\",\"ImageList\":\"MainBoard_ImageList__3bof3\"};","import React from \"react\";\r\nimport classes from './Button.module.css'\r\n\r\nconst Button = props => {\r\n    const cls = [\r\n        classes.Button,\r\n        classes[props.type]\r\n    ]\r\n\r\n    return(\r\n        <button\r\n            onClick={props.onClick}\r\n            className={cls.join(' ')}\r\n            disabled={props.disabled}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport classes from './Input.Module.css'\r\n\r\nconst Input = (props) => {\r\n    const cls = [classes.Input]\r\n    return (\r\n        <div className={cls.join(' ')}>\r\n\r\n            <input\r\n                ref={props.reference}\r\n                onChange={props.onChange}\r\n                placeholder={'Введите тег'}\r\n            />\r\n            {\r\n                !props.isFormValid\r\n                    ? <span>{props.errorMessageTeg}</span>\r\n                    : null\r\n\r\n            }\r\n            {\r\n                !props.state.data\r\n                    ? <span>{props.errorMessageData}</span>\r\n                    : null\r\n\r\n            }\r\n            {\r\n                props.state.httpError\r\n                    ? <span>{props.errorMessageHttp}</span>\r\n                    : null\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default Input;\r\n","import React, {Component} from 'react';\r\nimport classes from './Form.module.css'\r\nimport Button from \"../button/Button\";\r\nimport Input from \"../input/Input\";\r\n\r\nfunction validateInput(input) {\r\n    const re = /^[a-zA-Z\\,^ ]+$/;\r\n    return re.test(String(input));\r\n}\r\n\r\nclass Form extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = null;\r\n    }\r\n\r\n    state = {\r\n        isFormValid: true,\r\n        input: {\r\n            value: '',\r\n            type: 'text',\r\n            errorMessageTeg: 'заполните поле \"тег\" используя только латинские буквы',\r\n            errorMessageData: 'ничего не найдено',\r\n            errorMessageHttp: 'произошла http ошибка'\r\n\r\n        }\r\n    }\r\n\r\n\r\n    clickImage = () => {\r\n        if(this.props.state.inputValueClick !== ''){\r\n\r\n            this.inputRef.value = this.props.state.inputValueClick\r\n            console.log(this.state.input.value)\r\n            // const input = this.state.input\r\n            // input.value = this.props.state.inputValueClick\r\n            // this.setState({\r\n            //     input\r\n            // })\r\n            this.props.state.inputValueClick = ''\r\n        }\r\n    }\r\n\r\n\r\n    submitHandler = event => {\r\n        event.preventDefault()\r\n    }\r\n\r\n    onChangeHandler = (event) => {\r\n        const input = this.state.input  //созд. копию state\r\n        input.value = event.target.value  //меняем значение инпута\r\n        this.setState({\r\n            input //заменяем state\r\n        })\r\n        this.validateControl()\r\n    }\r\n\r\n    validateControl = () => {\r\n\r\n        if (this.state.input.value.trim() === '') //проверка не пустая ли строка\r\n        {\r\n            this.setState({isFormValid: false})\r\n        }\r\n        if (validateInput(this.state.input.value.trim())) {\r\n            this.setState({isFormValid: true})\r\n        } else {this.setState({isFormValid: false})}\r\n        if(!this.props.state.data){this.props.state.data = true}\r\n    }\r\n\r\n    clickLoad = () => {\r\n        this.validateControl()\r\n        let condition = () => {\r\n            if (this.state.isFormValid === true) {\r\n                this.props.loadImages(this.state.input.value)\r\n            }\r\n        }\r\n        setTimeout(condition, 0)\r\n    }\r\n\r\n    clickClear = () => {\r\n        this.props.clearBoard()\r\n        const input = this.state.input\r\n        input.value = ''\r\n        this.setState({\r\n                input\r\n            }\r\n        )\r\n        this.inputRef.value = ''\r\n    }\r\n\r\n    render() {\r\n        this.clickImage()\r\n        return (\r\n            <div>\r\n                <form className={classes.Form} onSubmit={this.submitHandler}>\r\n                    <Input\r\n                        reference={ref => this.inputRef = ref}\r\n                        onChange={event => this.onChangeHandler(event)}\r\n                        isFormValid={this.state.isFormValid}\r\n                        errorMessageTeg={this.state.input.errorMessageTeg}\r\n                        errorMessageData={this.state.input.errorMessageData}\r\n                        errorMessageHttp={this.state.input.errorMessageHttp}\r\n                        state={this.props.state}\r\n                    />\r\n                    {!this.props.state.loading\r\n                        ? <Button\r\n                            onClick={this.clickLoad}\r\n                            type={'load'}\r\n                        >Загрузить</Button>\r\n                        : <Button\r\n                            onClick={this.clickLoad}\r\n                            type={'load'}\r\n                            disabled={true}\r\n                        >Загрузка...</Button>}\r\n\r\n\r\n                    <Button\r\n                        onClick={this.clickClear}\r\n                        type={'clear'}\r\n                    >Очистить</Button>\r\n                    {!this.props.state.group\r\n                        ? <Button\r\n                            onClick={this.props.groupImages}\r\n                            type={'group'}\r\n                        >Группировать</Button>\r\n                        : <Button\r\n                            onClick={this.props.groupImages}\r\n                            type={'group'}\r\n                        >Разгрупировать</Button>}\r\n\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Form;\r\n","import classe from './ImageItem.module.css'\r\nimport React, {Component} from 'react';\r\n\r\nclass ImageItem extends Component {\r\n    renderImg() {\r\n        return this.props.src.map((src, index) => {\r\n            return (<img\r\n                onClick={this.props.onClick}\r\n                className={classe.ImageItem}\r\n                src={src}\r\n                key={index}\r\n            />)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classe.ImageTwo}>\r\n                { this.renderImg()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ImageItem;\r\n\r\n\r\n","import React from 'react';\r\nimport ImageItem from \"../imageItem/ImageItem\";\r\nimport classes from './ImageGroup.module.css'\r\n\r\nfunction ImageGroup(props) {\r\n    return props.teg.map((item, index) => {\r\n        return (\r\n            <div className={classes.ImageGroup} key={'image' + index}>\r\n                <h1>{item}</h1>\r\n                <div className={classes.ImageGrid}>\r\n                    {props.src.map((item) => {\r\n                        return (\r\n                            <ImageItem\r\n                                key={'index'+ item.url}\r\n                                src={item.url}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        );\r\n    })\r\n\r\n}\r\n\r\nexport default ImageGroup;","import React, {Component} from 'react';\r\nimport axios from \"axios\";\r\nimport Form from \"../Form/Form\";\r\nimport classes from './MainBoard.module.css'\r\nimport ImageItem from \"../imageItem/ImageItem\";\r\nimport ImageGroup from \"../imageGropup/ImageGroup\";\r\n\r\nclass MainBoard extends Component {\r\n\r\n    state = {\r\n        images: [],\r\n        imagesGroup: [],\r\n        loading: false,\r\n        group: false,\r\n        data: true,\r\n        httpError: false,\r\n        inputValueClick: '',\r\n        clickImage: false,\r\n    };\r\n\r\n    onClickImage = (teg) => {\r\n        this.setState({\r\n            inputValueClick: teg,\r\n            clickImage: true\r\n        })\r\n    }\r\n\r\n\r\n    loadImages = (teg) => {\r\n\r\n        let response = ''\r\n        let arrayUrl = []\r\n        this.setState({\r\n            loading: true\r\n        })\r\n        let tegs = teg.split(',')\r\n        let images = []\r\n\r\n        if (teg === 'delay') {\r\n            //let images = this.state.images\r\n            try {\r\n\r\n                let timer = setInterval(async () => {\r\n                    response = await axios.get(`https://api.giphy.com/v1/gifs/random?api_key=gTJAO48YcpmrADUyo4opy4ES4g7iDBxx`)\r\n                    images = [...this.state.images, {\r\n                        url: [response.data.data.image_url],\r\n                        teg: teg\r\n                    }]\r\n                    await this.setState({\r\n                        images,\r\n                        data: true\r\n                    })\r\n                }, 500)\r\n\r\n                setTimeout(() => {\r\n                    clearInterval(timer);\r\n                    this.setState({\r\n                        loading: false\r\n                    })\r\n                }, 5000);\r\n\r\n            } catch (e) {\r\n                console.log(e)\r\n                this.setState({\r\n                    httpError: true,\r\n                    loading: false\r\n                })\r\n            }\r\n        } else {\r\n            try {\r\n                tegs.map(async (teg) => {\r\n                    response = await axios.get(`https://api.giphy.com/v1/gifs/random?api_key=gTJAO48YcpmrADUyo4opy4ES4g7iDBxx&tag=${teg}`)\r\n                    arrayUrl.push(response.data.data.image_url)\r\n                    if (arrayUrl[0] === undefined) {\r\n                        images=[]\r\n                        this.setState({\r\n                            data: false,\r\n                            loading: false,\r\n                            images\r\n                        })} else {\r\n                        this.setState({\r\n                            loading: false\r\n                        })\r\n                    }\r\n                })\r\n                if(this.state.data) {\r\n                    images = [...this.state.images, {\r\n                        url: arrayUrl,\r\n                        teg: tegs\r\n                    }]\r\n                    this.setState({\r\n                        images,\r\n                        data: true\r\n                    })\r\n                } else return null\r\n            } catch (e) {\r\n                console.log(e)\r\n                this.setState({\r\n                    httpError: true,\r\n                    loading: false\r\n                })\r\n            }\r\n        }\r\n        // if (arrayUrl[0]=== undefined) {\r\n        //     this.setState({\r\n        //         data: false,\r\n        //         loading: false\r\n        //     })\r\n        // }\r\n        // else\r\n        // if (this.state.group === false) {\r\n        //     const images = this.state.images\r\n        //     images.push(\r\n        //         {\r\n        //             url: arrayUrl,\r\n        //             teg: teg\r\n        //         })\r\n        //     this.setState({\r\n        //             images,\r\n        //             data: true,\r\n        //             loading: false\r\n        //         }\r\n        //     )\r\n        // }\r\n    }\r\n\r\n    groupImage = () => {\r\n        if (this.state.group === false) {\r\n            let result = this.state.images.reduce(function (r, a) {\r\n                r[a.teg] = r[a.teg] || [];\r\n                r[a.teg].push(a);\r\n                return r;\r\n            }, Object.create(null));\r\n            this.setState({\r\n                    group: true,\r\n                    imagesGroup: result\r\n                }\r\n            )\r\n        } else {\r\n            this.setState({\r\n                    group: false\r\n                }\r\n            )\r\n        }\r\n    }\r\n\r\n    clearBoard = () => {\r\n        this.setState({\r\n            images: [],\r\n            imagesGroup: [],\r\n            loading: false,\r\n            group: false\r\n        })\r\n    }\r\n    renderImages = () => {\r\n        if (this.state.group === false) {\r\n            return (<div className={classes.ImageList}>\r\n                {\r\n                    this.state.images.map((img, index) => {\r\n                            return (\r\n                                <ImageItem\r\n                                    data={this.state.data}\r\n                                    key={index}\r\n                                    src={img.url}\r\n                                    teg={img.teg}\r\n                                    onClick={() => this.onClickImage(img.teg)}\r\n                                />)\r\n                        }\r\n                    )\r\n                }\r\n            </div>)\r\n        }\r\n        if (this.state.group === true) {\r\n            return Object.keys(this.state.imagesGroup).map((teg, index) => {\r\n                const tegs = []\r\n                tegs.push(teg)\r\n                const urls = this.state.imagesGroup[teg]\r\n                return (\r\n                    <ImageGroup\r\n                        key={index}\r\n                        src={urls}\r\n                        teg={tegs}\r\n                    />)\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Form\r\n                    state={this.state}\r\n                    loadImages={this.loadImages}\r\n                    clearBoard={this.clearBoard}\r\n                    groupImages={this.groupImage}\r\n                />\r\n                {this.renderImages()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainBoard;\r\n","\nimport './App.css';\nimport MainBoard from \"./MainBoard/MainBoard\";\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h2>Введите тег или несколько тегов через запятую, для выводы десяти рандомных гифок введите 'delay'</h2>\n        <MainBoard/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}